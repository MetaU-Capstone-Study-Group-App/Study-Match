// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int            @id @default(autoincrement())
  name                  String
  username              String         @unique
  password              String
  profile_picture       Bytes?         
  created_at            DateTime       @default(now())
  personality_quiz      Quiz?
  busy_times            BusyTimes? 

  @@map("users")
}

model Quiz {
  id               Int              @id 
  quiz_responses   QuizResponse[]
  user             User             @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction) 
  
  @@map("quizzes")
}

model QuizResponse {
  id               Int              @id @default(autoincrement())
  user_id          Int
  question_id      Int
  question         String
  question_trait   String
  response         Int
  quiz             Quiz             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("quizResponses")
}

model BusyTimes {
  id               Int              @id 
  busy_times       BusyTime[]
  user             User             @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction) 
  
  @@map("busyTimes")
}

model BusyTime {
  id               Int              @id @default(autoincrement())
  user_id          Int
  day_of_week      String
  start_time       String         
  end_time         String
  class_name       String         
  busy_times       BusyTimes        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("busyTime")
}
